# Also requires linking the pushSecret to the builder Service Account:
#   $ oc secrets link builder container-registry-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: container-registry-auth
  labels:
    app: container-registry
stringData:
  username: "@@USERNAME@@"
  password: "@@RANDOM_STRING@@"
  # contents created with:
  #   $ htpasswd -Bbn $USER $PASSWD
  htpasswd: |-
    "@@REPLACE_WITH_OUTPUT_OF_HTPASSWD_CMD@@"
  # contents created with:
  #   $ podman login -u $USER -p $PASSWD --authfile=config.json $URL
  config.json: |-
    {
      "auths": {
        "registry-samba.apps.ocp.ci.centos.org": {
          "auth": "@@SOME_B64ENCODED_STRING@@"
        }
      }
    }

# Use Image Pull secrets if needed by adding to Service Account:
#   $ oc secrets link default <secret-name> --for=pull
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-registry
  labels:
    app: container-registry
spec:
  selector:
    matchLabels:
      name: container-registry
  replicas: 1
  template:
    metadata:
      labels:
        name: container-registry
    spec:
      restartPolicy: Always
      containers:
        - name: docker-registry
          image: docker.io/library/registry:2
          volumeMounts:
            - name: container-images
              mountPath: /var/lib/registry
            - name: htpasswd
              mountPath: /auth
          env:
            - name: REGISTRY_AUTH
              value: htpasswd
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: Samba CI Container Registry
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: /auth/htpasswd
      volumes:
        - name: container-images
          persistentVolumeClaim:
            claimName: samba-image-registry
        - name: htpasswd
          secret:
            secretName: container-registry-auth

---
apiVersion: v1
kind: Service
metadata:
  name: container-registry
  labels:
    app: container-registry
spec:
  type: ClusterIP
  ports:
    - port: 5000
      protocol: TCP
      targetPort: 5000
  selector:
    name: container-registry

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: registry
  labels:
    app: container-registry
spec:
  port:
    targetPort: 5000
  tls:
    insecureEdgeTerminationPolicy: Allow
    termination: edge
  to:
    kind: Service
    name: container-registry
    weight: 100
  wildcardPolicy: None
